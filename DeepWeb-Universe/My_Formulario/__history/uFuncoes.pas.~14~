unit uFuncoes;

interface

uses Forms, Dialogs;

function ValidarCEP(ACEP: String): Boolean;
function ValidarEmail(AEmail: String): Boolean;
function ValidarUF(AUF: String): Boolean;
function ValidarCPF(ACPF: String): Boolean;
function SoNumeros(ATexto: String): String;

procedure MostraMensagem(ATexto: String);
procedure MostraAviso(Atexto: String);
procedure MostraErro(Atexto: String);

implementation

uses
  Winapi.Windows, ACBrValidador, uPrincipal, My_Layout;

procedure MostraMensagem(ATexto: String);
begin
  Application.MessageBox(PChar(ATexto), PChar(Application.Title), MB_OK + MB_ICONINFORMATION);
end;

procedure MostraAviso(Atexto: String);
begin
  Application.MessageBox(PChar(ATexto), PChar(Application.Title), MB_OK + MB_ICONWARNING);
end;

procedure MostraErro(Atexto: String);
begin
  Application.MessageBox(PChar(ATexto), PChar(Application.Title), MB_OK + MB_ICONERROR);
end;

function ValidarUF(AUF: String): Boolean;
begin
  Result := False;

  if (AUF) <> '' then
  begin
    frmPrincipal.ACBrValidador.Documento := AUF;
    frmPrincipal.ACBrValidador.TipoDocto := docUF;
    Result := frmPrincipal.ACBrValidador.Validar;
  end;
 if not Result then
    MostraAviso('ESTADO(UF) - INVÁLIDO');
end;

function ValidarCEP(ACEP: String): Boolean;
begin
  Result := False;

  if (ACEP) <> '' then
  begin
    frmPrincipal.ACBrValidador.Documento := ACEP;
    frmPrincipal.ACBrValidador.TipoDocto := docCEP;
    Result := frmPrincipal.ACBrValidador.Validar;
  end;
 if not Result then
    MostraAviso('CEP - Inválido');
end;

function ValidarEmail(AEMAIL: String): Boolean;
begin
  Result := False;

  if (AEMAIL) <> '' then
  begin
    frmPrincipal.ACBrValidador.Documento := AEMAIL;
    frmPrincipal.ACBrValidador.TipoDocto := docEmail;
    Result := frmPrincipal.ACBrValidador.Validar;
  end;
 if not Result then
    MostraAviso('EMAIL - Inválido');
end;

function ValidarCPF(ACPF: String): Boolean;
var sNumeros : String;
begin
  sNumeros := SoNumeros(frmCliente.edtCPF.Text);
  Result := False;
  if sNumeros <> '' then
  begin
    frmPrincipal.ACBrValidador.Documento := sNumeros;
    if Length(sNumeros) = 11 then
      frmPrincipal.ACBrValidador.TipoDocto := docCPF
    else
      frmPrincipal.ACBrValidador.TipoDocto := docCNPJ;
      Result := frmPrincipal.ACBrValidador.Validar;
  end;

  if not Result then
  begin
    MostraAviso('CPF/CNPJ - Inválido');
  end;
end;

function ValidarInscEst(AIE: String): Boolean;
begin
  Result := False;

  if (AIE) <> '' then
  begin
    frmPrincipal.ACBrValidador.Documento := AIE;
    frmPrincipal.ACBrValidador.TipoDocto := docInscEst;
    Result := frmPrincipal.ACBrValidador.Validar;
  end;
 if not Result then
    MostraAviso('"INSC. ESTADUAL - Inválido');
end;

function SoNumeros(ATexto: String): String;
var x: Integer;
    y: String;
begin
  x := 0;
  y := '';
  for x := 1 to Length(ATexto) do
  begin
    if (ATexto[x] IN ['0'..'9']) then
	    y := y + Copy(ATexto, x, 1);
  end;
  result := y;
end;

end.
