unit uVenda;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, JvExExtCtrls, JvExtComponent, JvPanel,
  Vcl.Grids, Vcl.DBGrids, Vcl.Mask, JvExMask, JvToolEdit, Vcl.StdCtrls,
  Vcl.ExtCtrls, Vcl.ActnList, Vcl.ComCtrls, Vcl.Buttons, Data.DB, ZSqlUpdate,
  ZAbstractRODataset, ZAbstractDataset, ZDataset;

type
  TfrmVenda = class(TForm)
    Panel1: TPanel;
    btnNovo: TSpeedButton;
    btnEditar: TSpeedButton;
    btnExcluir: TSpeedButton;
    StatusBar1: TStatusBar;
    ActionList1: TActionList;
    actNovo: TAction;
    actEditar: TAction;
    actExcluir: TAction;
    actSalvar: TAction;
    actCancelar: TAction;
    actQuitar: TAction;
    actEstornar: TAction;
    Timer1: TTimer;
    BalloonHint1: TBalloonHint;
    edtLocalizar: TEdit;
    Label2: TLabel;
    edtVenc1: TJvDateEdit;
    Label1: TLabel;
    edtVenc2: TJvDateEdit;
    DBGrid1: TDBGrid;
    JvPanel2: TJvPanel;
    sqlVendas: TZQuery;
    dsVendas: TDataSource;
    updVendas: TZUpdateSQL;
    sqlVendas_Pedidos: TZQuery;
    updVendas_Pedidos: TZUpdateSQL;
    dsVendas_Pedidos: TDataSource;
    sqlVendasid: TIntegerField;
    sqlVendasid_vendedores: TIntegerField;
    sqlVendasid_clientes: TIntegerField;
    sqlVendasdata: TDateField;
    sqlVendastotal_produtos: TFloatField;
    sqlVendasdesconto: TFloatField;
    sqlVendasdesconto_valor: TFloatField;
    sqlVendastotal_pagar: TFloatField;
    sqlVendasnome: TWideStringField;
    sqlVendas_Pedidosid: TIntegerField;
    sqlVendas_Pedidosid_vendas: TIntegerField;
    sqlVendas_Pedidosid_produtos: TIntegerField;
    sqlVendas_Pedidosvalor: TFloatField;
    sqlVendas_Pedidosqtde: TFloatField;
    sqlVendas_Pedidostotal: TFloatField;
    sqlVendas_Pedidosproduto: TWideStringField;
    sqlVendas_Pedidosabrev: TWideStringField;
    sqlVendas_Pedidosid_unid_medidas: TIntegerField;
    procedure edtLocalizarChange(Sender: TObject);
    procedure FormKeyPress(Sender: TObject; var Key: Char);
    procedure FormCreate(Sender: TObject);
    procedure btnNovoClick(Sender: TObject);
    procedure actNovoExecute(Sender: TObject);
    procedure actEditarExecute(Sender: TObject);
    procedure actExcluirExecute(Sender: TObject);
    procedure actSalvarExecute(Sender: TObject);
    procedure FormShow(Sender: TObject);
  private
    procedure LocalizarPedido;
    { Private declarations }
  public
    { Public declarations }
    SqlText_Vendas, SqlText_Vendas_Pedidos: String;
  end;

var
  frmVenda: TfrmVenda;

implementation

{$R *.dfm}

uses My_Layout, uVenda_Pedidos, uFuncoes;

procedure TfrmVenda.actEditarExecute(Sender: TObject);
begin
//
end;

procedure TfrmVenda.actExcluirExecute(Sender: TObject);
begin
  if Application.MessageBox('Deseja realmente "Excluir" o registro?',
    'Estoque - Venda', MB_YESNO) = mrYes then
  begin
    try
      sqlVendas.Delete;
      sqlVendas.ApplyUpdates;
      MostraMensagem('Registro excluido com "Sucesso!"');

    except
      on E: Exception do
        raise Exception.Create('Error ao "Excluir" o registro!' + E.Message);
    end;
  end;
end;

procedure TfrmVenda.actNovoExecute(Sender: TObject);
begin
//
end;

procedure TfrmVenda.actSalvarExecute(Sender: TObject);
begin
//
end;

procedure TfrmVenda.btnNovoClick(Sender: TObject);
begin
begin
  sqlVendas_Pedidos.SQL.Text := SqlText_Vendas_Pedidos + ' WHERE vp.id = 0';
  sqlVendas_Pedidos.Open;

  frmVendas_Pedidos := TfrmVendas_Pedidos.Create(Self);
  if frmVendas_Pedidos.ShowModal = mrOK then
  begin
    sqlVendas.Append;
    sqlVendasTotal_Produtos.Value    := frmVendas_Pedidos.edtTotal_Produto.Value;
    sqlVendasDesconto.Value          := frmVendas_Pedidos.edtDescont.Value;
    sqlVendasDesconto_Valor.Value    := frmVendas_Pedidos.edtDescont_Valor.Value;
    sqlVendasTotal_Pagar.Value       := frmVendas_Pedidos.edtTotal_Pagar.Value;
    sqlVendasData.Value              := frmVendas_Pedidos.edtData.Date;

    sqlVendasID_Clientes.AsString    := frmVendas_Pedidos.edtID_Cliente.Text;
    sqlVendasID_Vendedores.AsString  := frmVendas_Pedidos.edtID_Vendedor.Text;
    sqlVendasNome.AsString           := frmVendas_Pedidos.edtClientes.Text;
    sqlVendas.Post;
    sqlVendas.ApplyUpdates;

    ShowMessage('Pedido: ' + sqlVendasID.AsString);
    //sqlPedidos_Itens.First;
{
    while not sqlPedidos_Itens.Eof do
    begin
      sqlVendas_Pedidos.Append;
      sqlVendas_PedidosID_Pedidos.Value := sqlPedidosID.Value;
      sqlVendas_Pedidos.Post;
      sqlVendas_Pedidos.Next;
    end;
 }

  end;

  FreeAndNil(frmVendas_Pedidos);
end;
end;

procedure TfrmVenda.FormCreate(Sender: TObject);
begin
  SqlText_Vendas := sqlVendas.SQL.Text;
  SqlText_Vendas_Pedidos := sqlVendas_Pedidos.SQL.Text;
end;

procedure TfrmVenda.FormKeyPress(Sender: TObject; var Key: Char);
begin
  if (Key = #13) then
  begin
    Key := #0;
    Perform(WM_NEXTDLGCTL, 0, 0);
  end
  else if (Key = #27) then
  begin
    Key := #0;
    Close;
  end;

end;

procedure TfrmVenda.FormShow(Sender: TObject);
begin
  LocalizarPedido;
end;

procedure TfrmVenda.LocalizarPedido;
var
  Texto: String;
begin
  Texto := SqlText_Vendas + ' WHERE v.id > 0';
  if edtLocalizar.Text <> '' then
    Texto := Texto + ' AND c.nome LIKE ' + Quotedstr(edtLocalizar.Text + '%');
  sqlVendas.SQL.Text := Texto;
  sqlVendas.Open;
end;

procedure TfrmVenda.edtLocalizarChange(Sender: TObject);
begin
  LocalizarPedido;
end;

end.
