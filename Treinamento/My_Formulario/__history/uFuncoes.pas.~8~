unit uFuncoes;

interface

uses Forms, Dialogs;

function ValidarCEP(ACEP: String): Boolean;
function ValidarEmail(AEmail: String): Boolean;
function ValidarUF(AUF: String): Boolean;

procedure MostraMensagem(ATexto: String);
procedure MostraAviso(Atexto: String);
procedure MostraErro(Atexto: String);

implementation

uses
  Winapi.Windows, ACBrValidador, uPrincipal;

procedure MostraMensagem(ATexto: String);
begin
  Application.MessageBox(PChar(ATexto), PChar(Application.Title), MB_OK + MB_ICONINFORMATION);
end;

procedure MostraAviso(Atexto: String);
begin
  Application.MessageBox(PChar(ATexto), PChar(Application.Title), MB_OK + MB_ICONWARNING);
end;

procedure MostraErro(Atexto: String);
begin
  Application.MessageBox(PChar(ATexto), PChar(Application.Title), MB_OK + MB_ICONERROR);
end;

function ValidarUF(AUF: String): Boolean;
begin
  Result := False;

  if (AUF) <> '' then
  begin
    frmPrincipal.ACBrValidador.Documento := AUF;
    frmPrincipal.ACBrValidador.TipoDocto := docUF;
    Result := frmPrincipal.ACBrValidador.Validar;
  end;
 if not Result then
    MostraAviso('ATENÇÃO!: ESTADO(UF) DIGITADO - INVÁLIDO');
end;

function ValidarCEP(ACEP: String): Boolean;
begin
  Result := False;

  if (ACEP) <> '' then
  begin
    frmPrincipal.ACBrValidador.Documento := ACEP;
    frmPrincipal.ACBrValidador.TipoDocto := docCEP;
    Result := frmPrincipal.ACBrValidador.Validar;
  end;
 if not Result then
    MostraAviso('ATENÇÃO! CEP DIGITADO - INVÁLIDO');
end;

function ValidarEmail(AEMAIL: String): Boolean;
begin
  Result := False;

  if (AEMAIL) <> '' then
  begin
    frmPrincipal.ACBrValidador.Documento := AEMAIL;
    frmPrincipal.ACBrValidador.TipoDocto := docEmail;
    Result := frmPrincipal.ACBrValidador.Validar;
  end;
 if not Result then
    MostraAviso('ATENÇÃO! EMAIL DIGITADO - INVÁLIDO');
end;
end.
